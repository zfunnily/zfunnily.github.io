<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>libevent on 留白</title>
    <link>https://zfunnily.github.io/tags/libevent/</link>
    <description>Recent content in libevent on 留白</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 16 Sep 2020 23:20:28 +0000</lastBuildDate><atom:link href="https://zfunnily.github.io/tags/libevent/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Libevent | 定时器</title>
      <link>https://zfunnily.github.io/2020/09/libeventimer/</link>
      <pubDate>Wed, 16 Sep 2020 23:20:28 +0000</pubDate>
      
      <guid>https://zfunnily.github.io/2020/09/libeventimer/</guid>
      <description>libevent 实现定时器流程 首先初始化libevent库，并保存返回的指针 struct event_base * base = event_init(); 实际上这一步相当于初始化一个Reactor实例；在初始化libevent后，就可以注册事件了。 初始化事件event，设置回调函</description>
    </item>
    
  </channel>
</rss>
