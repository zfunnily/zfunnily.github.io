<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>堆栈 on Zzz记忆</title>
    <link>https://zfunnily.github.io/tags/%E5%A0%86%E6%A0%88/</link>
    <description>Recent content in 堆栈 on Zzz记忆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 10 Mar 2021 11:11:47 +0000</lastBuildDate><atom:link href="https://zfunnily.github.io/tags/%E5%A0%86%E6%A0%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>协程解析二 | 云风的coroutine</title>
      <link>https://zfunnily.github.io/2021/03/coroutinetwo/</link>
      <pubDate>Wed, 10 Mar 2021 11:11:47 +0000</pubDate>
      
      <guid>https://zfunnily.github.io/2021/03/coroutinetwo/</guid>
      <description>概述 云风的coroutine是通过ucontext来控制程序运行时上下文的，我们来根据该库提供的几个接口，和一个demo来解释协程的运行原理。如果不了解ucontext的，建议先了解ucontxt 环境</description>
    </item>
    
    <item>
      <title>协程解析一 | ucontext</title>
      <link>https://zfunnily.github.io/2021/03/coroutineone/</link>
      <pubDate>Tue, 09 Mar 2021 09:43:00 +0000</pubDate>
      
      <guid>https://zfunnily.github.io/2021/03/coroutineone/</guid>
      <description>概述 最近在研究协程的实现原理，看了云风的coroutine和腾讯的开源库libco后，原来要实现一个协程库也没那么难。我先来讲讲云风的coroutine库。他使用的是 uncontext来保存程序运行上</description>
    </item>
    
  </channel>
</rss>
