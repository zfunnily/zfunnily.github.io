<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>K8s on Zzz记忆</title><link>https://zfunnily.github.io/tags/k8s/</link><description>Recent content in K8s on Zzz记忆</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 27 Feb 2024 06:13:51 +0000</lastBuildDate><atom:link href="https://zfunnily.github.io/tags/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>K8S | Prometheus+Grafana监控</title><link>https://zfunnily.github.io/2020/08/prometheusgrafana/</link><pubDate>Mon, 17 Aug 2020 13:58:35 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/prometheusgrafana/</guid><description>概述 作为应用与Kubernetes的监控体系，Prometheus具备诸多的优势，如： Kubernetes默认支持,非常适合容器和微服务- 无依赖，安装方便，上手容易- 社区活跃，它不仅仅是个工具，而是生</description></item><item><title>K8S | Ingress的基本使用</title><link>https://zfunnily.github.io/2020/08/ingress/</link><pubDate>Sat, 15 Aug 2020 00:05:15 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/ingress/</guid><description>缘由 看了statefulset基础教程的基础教程，并且把环境搭建起来后。pod内部是可以连通了。但是我不知道怎么去从外部访问。在网上搜索一番，通过Ingress可以作为集群的入口。遂记录之。 结合Sta</description></item><item><title>K8S | Statefluset的持久存储PVC</title><link>https://zfunnily.github.io/2020/08/pvc/</link><pubDate>Fri, 14 Aug 2020 17:18:58 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/pvc/</guid><description>缘由 在看statefluset基础教程的时候遇到pod状态为pending kubectl describe pod web-0 日志内容是 pod has unbound immediate PersistentVolumeClaims 于是就对PV和PVC进行研究。 有给出完整的 web.yaml查看最下面的完整示例。但是我建议先把PV</description></item><item><title>K8S | coreDNS的部署安装</title><link>https://zfunnily.github.io/2020/08/coredns/</link><pubDate>Thu, 13 Aug 2020 18:44:28 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/coredns/</guid><description>概述 CoreDNS可以在具有标准的Kube-DNS的Kubernetes集群中运行。作为Kubernetes 的插件使用，CoreDNS将从 Kubernetes集群中读取区（zone）数据。它实现了为K</description></item><item><title>K8S | 创建第一个应用</title><link>https://zfunnily.github.io/2020/08/firstk8s/</link><pubDate>Thu, 13 Aug 2020 15:28:31 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/firstk8s/</guid><description>使用k8s部署第一个应用 创建一个nginx.yaml文件 apiVersion: v1 kind: Pod metadata: name: nginx # 指定 label，便于检索 labels: app: nginx spec: containers: - name: nginx # 指定镜像 image: nginx:alpine # 指定暴露端口 ports: - containerPort: 80 --- # 创建网络服务 apiVersion: v1 kind: Service metadata: name: kube-node-service labels: name: kube-node-service spec: type: NodePort #这里代表</description></item><item><title>K8S | 集群资源监控 heapster</title><link>https://zfunnily.github.io/2020/08/heapster/</link><pubDate>Thu, 06 Aug 2020 09:06:05 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/heapster/</guid><description>安装heapster的原因 查看dashboard状态 $ sudo kubectl get pods --all-namespaces | grep dashboard kubernetes-dashboard dashboard-metrics-scraper-6b4884c9d5-mvnb9 1/1 Running 0 40m kubernetes-dashboard kubernetes-dashboard-d7f7f565d-zhpsc 1/1 Running 0 40m 查看dashboard的日志 $ sudo kubectl logs -f -n kubernetes-dashboard kubernetes-dashboard-d7f7f565d-zhpsc 日志遇到这样的情况 No metric client provided. Skipping metrics. 2020/08/03 09:02:22 [2020-08-03T09:02:22Z] Outcoming response to 192.168.84.241:40086 with 200 status code 2020/08/03 09:02:23 Metric client health</description></item><item><title>K8S | Dashboard界面管理</title><link>https://zfunnily.github.io/2020/08/dashboard/</link><pubDate>Thu, 06 Aug 2020 09:04:14 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/dashboard/</guid><description>安装部署Dashboard 通过一下命令来部署, recommended.yaml $ sudo kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/depl</description></item><item><title>K8S | 安装</title><link>https://zfunnily.github.io/2020/08/k8sinstall/</link><pubDate>Wed, 05 Aug 2020 10:00:40 +0000</pubDate><guid>https://zfunnily.github.io/2020/08/k8sinstall/</guid><description>安装k8s前的准备工作 环境 ubuntu18.04 docker 关闭 swap 暂时关闭 $ swapoff -a 永久关闭 注释掉这一行 sudo vim /etc/fstab # /swapfile none swap sw 0 0 重启机器 sudo reboot docker 的配置 安装完成之后需要进行一些配置，包括 切换docker下载源为国内镜像站 以及 修改cgroups</description></item></channel></rss>