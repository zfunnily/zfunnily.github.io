<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shell on 留白</title>
    <link>https://zfunnily.github.io/tags/shell/</link>
    <description>Recent content in shell on 留白</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 13 Oct 2021 17:15:45 +0800</lastBuildDate><atom:link href="https://zfunnily.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang调用带有后台进程shell脚本可能会被挂起</title>
      <link>https://zfunnily.github.io/2021/10/shell/</link>
      <pubDate>Wed, 13 Oct 2021 17:15:45 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2021/10/shell/</guid>
      <description>起因 今天用Golang写一个调用外部shell脚本的程序，使用 exec.Command方法，这段脚本代码中包含了一个后台任务语句。 结果发生了一个问题：cmd.Output 始终不会返回，一直挂起。导致我的Go程序也挂起了。 问题还原 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //main.go package main import ( &amp;#34;fmt&amp;#34; &amp;#34;os/exec&amp;#34; ) func</description>
    </item>
    
    <item>
      <title>shell Except 使用</title>
      <link>https://zfunnily.github.io/2021/08/except/</link>
      <pubDate>Mon, 30 Aug 2021 17:13:33 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2021/08/except/</guid>
      <description>Except 参数 1 2 3 4 5 6 7 8 9 10 11 12 spawn 交互程序开始后面跟命令或者指定程序 expect 获取匹配信息匹配成功则执行expect后面的程序动作 send exp_send 用于发送指定的字符串信息 exp_continue 在expect中多次匹配就需要用到 send_user 用来打印输出 相当于shell中的echo exit 退出expect脚本 eof expect执行结束 退出 set 定义</description>
    </item>
    
  </channel>
</rss>
