<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>redis on Zzz记忆</title><link>https://zfunnily.github.io/tags/redis/</link><description>Recent content in redis on Zzz记忆</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 16 Feb 2024 00:59:55 +0000</lastBuildDate><atom:link href="https://zfunnily.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml"/><item><title>Redis源码分析 | ziplist</title><link>https://zfunnily.github.io/2021/01/ziplist/</link><pubDate>Wed, 13 Jan 2021 17:52:27 +0000</pubDate><guid>https://zfunnily.github.io/2021/01/ziplist/</guid><description>概述 Redis中的List是一个有序（按加入的时序排序）的数据结构，一般有序我们会采用数组或者是双向链表，其中双向链表由于有前后指针实际上会很浪费内存。3.2版本之前采用两种数据结构作为底层实现： 压缩</description></item><item><title>Redis源码解析 | VScode调试</title><link>https://zfunnily.github.io/2021/01/vscodedebugredis/</link><pubDate>Tue, 12 Jan 2021 14:25:29 +0000</pubDate><guid>https://zfunnily.github.io/2021/01/vscodedebugredis/</guid><description>环境 vscode- gcc5.4 ubuntu16.04 或者 ubuntu18.04 make 下载6.2版本. 我使用的是国内github镜像地址：github.com.cnpmjs.org，速度比较快。 $ git clone https://github.com.cnpmjs.org/redis/redis.git redis $ git checkout -b 6.2 remotes/origin/6.2 vscode不参与编译，只充当可视化的调试工具。 使用</description></item><item><title>VScode | 调试Redis源码，指针显示的问题</title><link>https://zfunnily.github.io/2021/01/vscoderedis/</link><pubDate>Tue, 12 Jan 2021 14:17:22 +0000</pubDate><guid>https://zfunnily.github.io/2021/01/vscoderedis/</guid><description>缘由 使用VScode的时候，断点看到指针显示的是一串地址，而不是指针指向的对象的值。上网找了一圈，没看到vscode有对应的插件来解决这个问题。vscode有对应的语法来解决这个问题。 网上几乎都在说在</description></item><item><title>Redis源码解析 | sds</title><link>https://zfunnily.github.io/2021/01/sds/</link><pubDate>Wed, 06 Jan 2021 14:20:23 +0000</pubDate><guid>https://zfunnily.github.io/2021/01/sds/</guid><description>SDS头文件及作用 sds.h: sds声明- sdsalloc.h： 为sds分配内存 源码文件sds.h中有这样一行代码 typedef char *sds; 很清晰、明了，sds其实就是char*。 最新的6.2分支的代码： struct __attribute__ ((__packed__)) sdshdr5 {&amp;lt;!-- --&amp;gt; unsigned char flags; /* 3 lsb of</description></item></channel></rss>