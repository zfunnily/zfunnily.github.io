<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenResty on Zzz记忆</title>
    <link>https://zfunnily.github.io/categories/OpenResty/</link>
    <description>Recent content in OpenResty on Zzz记忆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 28 Dec 2021 16:04:10 +0800</lastBuildDate><atom:link href="https://zfunnily.github.io/categories/OpenResty/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nginx的一些配置</title>
      <link>https://zfunnily.github.io/2021/12/nginx/</link>
      <pubDate>Tue, 28 Dec 2021 16:04:10 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2021/12/nginx/</guid>
      <description>静态网站 应用场景 文件服务 静态网站 &amp;hellip; 静态网站的配置 配置如下: nginx.conf worker_processes 1; pid nginx.pid; events { worker_connections 1024; multi_accept on; } http { default_type application/octet-stream; sendfile on; keepalive_timeout 100; server { listen 80; charset utf-8,gbk; server_name localhost; location /{ root /opt/; autoindex on; autoindex_localtime on; } index index.html; # 显示首页 #静态文件访问 location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|js|pdf|txt) { root /opt; } } } root: 表示网站根目录 autoindex: on 显</description>
    </item>
    
    <item>
      <title>Openresty三 | 上传文件</title>
      <link>https://zfunnily.github.io/2021/12/openresty-upload/</link>
      <pubDate>Wed, 08 Dec 2021 16:42:17 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2021/12/openresty-upload/</guid>
      <description>上传文件接口 nginx.conf 的server 增加一个location: location /upload { resolver 8.8.8.8 ipv6=off; content_by_lua_file lua/upload.lua; } upload.lua lua -- upload.lua --========================================== -- 文件上传 --========================================== local chunk_size = 4096 local form, err = upload:new(chunk_size) if not form then ngx.log(ngx.ERR, &amp;#34;failed to new upload: &amp;#34;, err) ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR) end form:set_timeout(1000) -- 文件保存的根路径 local saveRootPath = &amp;#34;./download/&amp;#34; -- 保存的文件对象 local fileToSave --文件是否成</description>
    </item>
    
    <item>
      <title>Openresty二 | postman小工具</title>
      <link>https://zfunnily.github.io/2020/11/%E4%BD%BF%E7%94%A8OpenResty%E5%81%9A%E4%B8%80%E4%B8%AApostman%E5%B0%8F%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 25 Nov 2020 16:30:39 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2020/11/%E4%BD%BF%E7%94%A8OpenResty%E5%81%9A%E4%B8%80%E4%B8%AApostman%E5%B0%8F%E5%B7%A5%E5%85%B7/</guid>
      <description>用到的知识点 mvc架构 模型渲染库：https://github.com/bungle/lua-resty-template resty http请求库： https://github.com/bungle/lua-resty-template 参照 mvc模型来做postman工具 配置文件说明 worker_processes 1; error_log logs/error.log; events</description>
    </item>
    
    <item>
      <title>Openresty一 | 初探</title>
      <link>https://zfunnily.github.io/2020/11/OpenResty%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Mon, 23 Nov 2020 16:21:34 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2020/11/OpenResty%E5%88%9D%E6%8E%A2/</guid>
      <description>概述 OpenResty®是一个基于Nginx与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。</description>
    </item>
    
  </channel>
</rss>
