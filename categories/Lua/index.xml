<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lua on Zzz记忆</title>
    <link>https://zfunnily.github.io/categories/Lua/</link>
    <description>Recent content in Lua on Zzz记忆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 10 May 2021 16:39:50 +0800</lastBuildDate>
    
	<atom:link href="https://zfunnily.github.io/categories/Lua/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lua | next的使用</title>
      <link>https://zfunnily.github.io/2021/05/lua_next/</link>
      <pubDate>Mon, 10 May 2021 16:39:50 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2021/05/lua_next/</guid>
      <description>lua_next lua_next(L,index)：先把 表(lua栈 index所指的表), 的当前索引弹出，再把table 当前索引的值弹出，也就是先弹出 table的索引，再弹出table索引的值 举例： local t = { [&amp;quot;a&amp;quot;] = 1, [&amp;quot;b&amp;quot;]</description>
    </item>
    
    <item>
      <title>Lua | API</title>
      <link>https://zfunnily.github.io/2021/05/settopandpop/</link>
      <pubDate>Mon, 10 May 2021 15:57:03 +0800</pubDate>
      
      <guid>https://zfunnily.github.io/2021/05/settopandpop/</guid>
      <description>lua_pop和lua_settop lua_settop 我们直接来看lua_settop，文档解释 /* 设置栈的高度，如果之前的栈顶比新设置的更高，那么高出来的元素会被丢弃，反之压入nil来补足大小 假设栈里有2个元素。 如果</description>
    </item>
    
    <item>
      <title>Lua | 解决百元买鸡的问题</title>
      <link>https://zfunnily.github.io/2021/02/chicken/</link>
      <pubDate>Wed, 24 Feb 2021 17:51:46 +0000</pubDate>
      
      <guid>https://zfunnily.github.io/2021/02/chicken/</guid>
      <description>问题 编写lua程序求解百鸡百钱问题。公鸡5元一只，母鸡3元一只，小鸡一元3只，问100元钱买100只鸡，可买公鸡、母鸡、小鸡各多少只？ 代码 ----------------------------------------------------------------------------- --公鸡5元一只，母鸡3元一只，小鸡一元3只，问100元钱买</description>
    </item>
    
    <item>
      <title>Lua | 调用C/C&#43;&#43;的动态库</title>
      <link>https://zfunnily.github.io/2021/02/dynamic/</link>
      <pubDate>Sat, 20 Feb 2021 11:11:51 +0000</pubDate>
      
      <guid>https://zfunnily.github.io/2021/02/dynamic/</guid>
      <description>概述 最近在学习 云风的skynet库，想自定义一个模块，目标是使用lua调用C/C++所编写的库。 当我们需要在Lua里面调用c/c++函数时，所有的函数都必须满足以下函数签名： typedef int (*lua_CFunction) (lua_State *L); 换句话说，所有的</description>
    </item>
    
  </channel>
</rss>